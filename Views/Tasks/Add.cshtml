@model ScheduledTask
@{
    ViewData["Title"] = "Add New Task";
}

<div class="max-w-2xl mx-auto">
    <div class="bg-white shadow-md rounded-lg p-6">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Add New Task</h2>

        <form asp-action="Add" method="post">
            <div class="space-y-4">
                <div>
                    <label asp-for="Name" class="block text-sm font-medium text-gray-700">Task Name</label>
                    <input asp-for="Name" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200" />
                    <span asp-validation-for="Name" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="DeviceId" class="block text-sm font-medium text-gray-700">Device</label>
                    <select asp-for="DeviceId" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200">
                        <option value="">Select Device</option>
                        @foreach (var device in ViewBag.Devices)
                        {
                            <option value="@device.Id">@device.Name (@device.IpAddress)</option>
                        }
                    </select>
                    <span asp-validation-for="DeviceId" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="Command" class="block text-sm font-medium text-gray-700">Command</label>
                    <select asp-for="Command" asp-items="Html.GetEnumSelectList<CommandType>()" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200">
                    </select>
                    <span asp-validation-for="Command" class="text-sm text-red-600"></span>
                </div>

                <div>
                    <label asp-for="ScheduleType" class="block text-sm font-medium text-gray-700">Schedule Type</label>
                    <select asp-for="ScheduleType" asp-items="Html.GetEnumSelectList<ScheduleType>()"
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200"
                            onchange="toggleScheduleOptions(this.value)">
                    </select>
                    <span asp-validation-for="ScheduleType" class="text-sm text-red-600"></span>
                </div>

                <div id="executionTimeDiv">
                    <label asp-for="ExecutionTime" class="block text-sm font-medium text-gray-700">Execution Time</label>
                    <input type="time" asp-for="ExecutionTime" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200" />
                    <span asp-validation-for="ExecutionTime" class="text-sm text-red-600"></span>
                </div>

                <div id="executionDateDiv" style="display: none;">
                    <label asp-for="ExecutionDate" class="block text-sm font-medium text-gray-700">Execution Date</label>
                    <input type="date" asp-for="ExecutionDate" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200" />
                    <span asp-validation-for="ExecutionDate" class="text-sm text-red-600"></span>
                </div>

                <div id="repeatDaysDiv" style="display: none;">
                    <label class="block text-sm font-medium text-gray-700">Repeat Days</label>
                    <div class="mt-2 space-x-2">
                        @foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                        {
                            <label class="inline-flex items-center">
                                <input type="checkbox" name="RepeatDays" value="@((int)day)" class="rounded border-gray-300 text-purple-600 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50" />
                                <span class="ml-2">@day</span>
                            </label>
                        }
                    </div>
                </div>

                <div class="flex justify-end space-x-3 pt-4">
                    <a href="@Url.Action("Index", "Tasks")" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                        Cancel
                    </a>
                    <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500">
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function toggleScheduleOptions(scheduleType) {
            const executionTimeDiv = document.getElementById('executionTimeDiv');
            const executionDateDiv = document.getElementById('executionDateDiv');
            const repeatDaysDiv = document.getElementById('repeatDaysDiv');

            executionTimeDiv.style.display = 'block';

            switch (scheduleType) {
                case 'OneTime':
                    executionDateDiv.style.display = 'block';
                    repeatDaysDiv.style.display = 'none';
                    break;
                case 'Daily':
                    executionDateDiv.style.display = 'none';
                    repeatDaysDiv.style.display = 'none';
                    break;
                case 'Weekly':
                    executionDateDiv.style.display = 'none';
                    repeatDaysDiv.style.display = 'block';
                    break;
            }
        }

        // Initialize the form based on the initial schedule type
        document.addEventListener('DOMContentLoaded', function() {
            const scheduleType = document.getElementById('ScheduleType').value;
            toggleScheduleOptions(scheduleType);
        });
    </script>
}